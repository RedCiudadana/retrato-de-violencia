#!/usr/bin/env ruby
# encoding: utf-8
require 'csv'
require 'json'


CODIGO_IBGE_MICROREGIOES = Hash[CSV.read('data/municipios_rs.csv').to_a[1..-1].map { |x| [x[0], x[2]] }]
MICROREGIOES = {
  430101 => "Santa Rosa",
  430102 => "Três Passos",
  430103 => "Frederico Westphalen",
  430104 => "Erechim",
  430105 => "Sananduva",
  430106 => "Cerro Largo",
  430107 => "Santo Ângelo",
  430108 => "Ijuí",
  430109 => "Carazinho",
  430110 => "Passo Fundo",
  430111 => "Cruz Alta",
  430112 => "Não-Me-Toque",
  430113 => "Soledade",
  430214 => "Guaporé",
  430215 => "Vacaria",
  430216 => "Caxias do Sul",
  430317 => "Santiago",
  430318 => "Santa Maria",
  430319 => "Restinga Seca",
  430420 => "Santa Cruz do Sul",
  430421 => "Lajeado-Estrela",
  430422 => "Cachoeira do Sul",
  430523 => "Montenegro",
  430524 => "Gramado-Canela",
  430525 => "São Jerônimo",
  430526 => "Porto Alegre",
  430527 => "Osório",
  430528 => "Camaquã",
  430629 => "Campanha Ocidental",
  430630 => "Campanha Central",
  430631 => "Campanha Meridional",
  430732 => "Serras de Sudeste",
  430733 => "Pelotas",
  430734 => "Jaguarão",
  430735 => "Litoral Lagunar"
}
ESTUPROS = CSV.read('data/estupros_mulheres_dados_abertos.csv', :col_sep => ';')[1..-1]
POPULACAO = CSV.read('data/populacao.csv', :col_sep => ',')[1..-1]

pop_por_regiao = {}
POPULACAO.each do |pop| 
  codigo = CODIGO_IBGE_MICROREGIOES[pop.first]
  pop_por_regiao[codigo] ||= 0
  pop_por_regiao[codigo] += pop.last.to_i
end

results = {}
dias_da_semana = {}
dias_do_mes = {}
meses = {}
anos = {}

ESTUPROS.each do |estupro|
  municipio, ano, mes, dia, dia_da_semana, turno, hora, consumado, local, idade_vitima, idade_autor = *estupro

  next if (idade_vitima.to_i.zero? || idade_autor.to_i.zero?)

  municipio = $1 if municipio =~ /\((.*)\)/
  consumado = (consumado == 'Consumado')
  pela_manha = (turno =~ /(Manh|Tarde)/)

  populacao = 0
  POPULACAO.each do |pop|
    if pop.first == municipio
      populacao = pop.last
    end
  end

  dias_da_semana[dia_da_semana] = (dias_da_semana[dia_da_semana] || 0) + 1
  meses[mes] = (meses[mes] || 0) + 1
  dias_do_mes[dia] = (dias_do_mes[dia] || 0) + 1

  dados = { :municipio => municipio, 
            :turno => turno,
            :local => local,
            :consumado => consumado,
            :idade_vitima => idade_vitima.to_i,
            :idade_autor => idade_autor.to_i,
            :pela_manha => pela_manha,
            :populacao => populacao.to_i,
            :ano => ano.to_i}

  codigo_microregiao = CODIGO_IBGE_MICROREGIOES[municipio]
  results[codigo_microregiao] ||= []
  results[codigo_microregiao] << dados
end



# Calcula estatísticas consolidadas por região
resultado = {}
results.each_pair do |codigo, estupros|
  media_idade_vitima = estupros.map { |estupro| estupro[:idade_vitima] }.inject(:+) / estupros.length
  media_idade_autor = estupros.map { |estupro| estupro[:idade_autor] }.inject(:+) / estupros.length

  anos = {}
  estupros.each { |estupro| anos[estupro[:ano]] = (anos[estupro[:ano]] || 0) + 1 }

  consumados = estupros.select { |estupro| estupro[:consumado] }.length
  pela_manha = estupros.select { |estupro| estupro[:pela_manha] }.length
  local = {
      :residencia => estupros.select { |estupro| estupro[:local] =~ /Resid.ncia/ }.length,
      :via_publica => estupros.select { |estupro| estupro[:local] == "Via Publica" }.length,
  }
  
  resultado[codigo] = { :nome => MICROREGIOES[codigo.to_i],
                        :media_idade_vitima => media_idade_vitima,
                        :media_idade_autor => media_idade_autor,
                        :pela_manha => pela_manha,
                        :ocorrencias => estupros.length,
                        :local => local,
                        :populacao => pop_por_regiao[codigo],
                        :anos => anos }

end

# Calcula opacidade da região, usando o número de ocorrências/população
max = resultado.map { |estupro| estupro[1][:ocorrencias] / estupro[1][:populacao].to_f }.max

ocorr = []
resultado.each_pair do |codigo, res|
  ocorrencias_por_populacao = res[:ocorrencias] / res[:populacao].to_f
  resultado[codigo][:range] = (ocorrencias_por_populacao * 100000).to_i / 32
  resultado[codigo][:opacity] = ocorrencias_por_populacao / max
  resultado[codigo][:proporcao] = (ocorrencias_por_populacao * 100000).to_i
  
end

File.open("data/dados_estupros.json","w") do |f|
  f.write(resultado.to_json)
end

